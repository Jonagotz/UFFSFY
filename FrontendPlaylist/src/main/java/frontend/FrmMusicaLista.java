/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

import entities.Musica;
import java.awt.Desktop;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

/**
 *
 * @author jonathan
 */
public class FrmMusicaLista extends javax.swing.JFrame {

    public FrmMusicaLista() {
        initComponents();
        loadTableData();
        loadMusicasCombobox();
        
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                // Quando o FrmUsuarioCad é fechado, abre o frame Principal
                SwingUtilities.invokeLater(() -> {
                    FrmPlaylistLista principalFrame = new FrmPlaylistLista();
                    principalFrame.setVisible(true);
                });
            }
        });
    }
    
    public void loadTableData() {
        RestTemplate req = new RestTemplate();
        
        ResponseEntity<Musica[]> response = req.getForEntity("http://localhost:8080/musicas", Musica[].class);
        
        Musica[] musicas = response.getBody();
        
        DefaultTableModel tbl = (DefaultTableModel) tblMusica.getModel();
        
        tbl.setNumRows(0);
        
        for (var c : musicas) {
            Object[] row = { c.getId(), c.getTitulo(), c.getArtista(), c.getUrl()};
            tbl.addRow(row);
        }
    
    }
    
    public void loadMusicasCombobox() {
        RestTemplate req = new RestTemplate();
        
        ResponseEntity<Musica[]> response = req.getForEntity(
                "http://localhost:8080/musicas", Musica[].class);
        
        Musica[] musicas = response.getBody();
        
        for (var c : musicas) {
            cbMusicaTocar.addItem(c.getId() + " - "+ c.getTitulo());
        }
        
        for (var c : musicas) {
            cbMusicaExcluir.addItem(c.getId() + " - "+ c.getTitulo());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAddMusica = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMusica = new javax.swing.JTable();
        btnBackPlaylist = new javax.swing.JButton();
        btnTocarMusica = new javax.swing.JButton();
        btnExcluirMusica = new javax.swing.JButton();
        cbMusicaTocar = new javax.swing.JComboBox<>();
        cbMusicaExcluir = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Listagem de músicas");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Listagem de Músicas"));

        btnAddMusica.setText("Adicionar Músicas");
        btnAddMusica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMusicaActionPerformed(evt);
            }
        });

        tblMusica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Titulo", "Artista", "url"
            }
        ));
        tblMusica.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                tblMusicaInputMethodTextChanged(evt);
            }
        });
        jScrollPane1.setViewportView(tblMusica);

        btnBackPlaylist.setText("Voltar para Playlists");
        btnBackPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackPlaylistActionPerformed(evt);
            }
        });

        btnTocarMusica.setText("Tocar");
        btnTocarMusica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTocarMusicaActionPerformed(evt);
            }
        });

        btnExcluirMusica.setText("Excluir");
        btnExcluirMusica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirMusicaActionPerformed(evt);
            }
        });

        cbMusicaTocar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMusicaTocarActionPerformed(evt);
            }
        });

        cbMusicaExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMusicaExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAddMusica)
                        .addGap(18, 18, 18)
                        .addComponent(btnBackPlaylist))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbMusicaTocar, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbMusicaExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnExcluirMusica, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                            .addComponent(btnTocarMusica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddMusica)
                    .addComponent(btnBackPlaylist))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMusicaTocar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTocarMusica))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluirMusica)
                    .addComponent(cbMusicaExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMusicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMusicaActionPerformed
        FrmMusicaCad frm = new FrmMusicaCad();
        frm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAddMusicaActionPerformed

    private void btnBackPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackPlaylistActionPerformed
        FrmPlaylistLista frm = new FrmPlaylistLista();
        frm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackPlaylistActionPerformed

    // Método para obter a URL da música pelo ID
    public String obterUrlPorId(String id) {
        RestTemplate req = new RestTemplate();
        ResponseEntity<Musica> response = req.getForEntity("http://localhost:8080/musica/" + id, Musica.class);
        Musica musica = response.getBody();
        if (musica != null) {
            return musica.getUrl();
        } else {
            return null;
        }
    }
    
    private void btnTocarMusicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTocarMusicaActionPerformed
        String musicaSelecionada = (String) cbMusicaTocar.getSelectedItem();

        if (musicaSelecionada != null) {
            String[] partes = musicaSelecionada.split(" - ");
            if (partes.length == 2) {
                String idMusica = partes[0];
                String urlMusica = obterUrlPorId(idMusica);
                if (urlMusica.equals("")) {
                    JOptionPane.showMessageDialog(this, "Música não possui URL, favor adicionar para tocar música.");
                    return;
                }
                // inicia processo de abrir url no navegador
                if (Desktop.isDesktopSupported() && Desktop.getDesktop().isSupported(Desktop.Action.BROWSE)) {
                    try {
                        Desktop.getDesktop().browse(new URI(urlMusica));
                    } catch (URISyntaxException ex) {
                        Logger.getLogger(FrmMusicaLista.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(FrmMusicaLista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Formato de música inválido");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nenhuma música selecionada");
        }
        
    }//GEN-LAST:event_btnTocarMusicaActionPerformed
    
    public void excluirMusicaPorId(String id) {
        RestTemplate req = new RestTemplate();
        ResponseEntity<Musica> response = req.getForEntity("http://localhost:8080/deletar-musica/" + id, Musica.class);
        Musica musica = response.getBody();
        
    }
    
    private void btnExcluirMusicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirMusicaActionPerformed
        String musicaSelecionada = (String) cbMusicaExcluir.getSelectedItem();

        if (musicaSelecionada != null) {
            String[] partes = musicaSelecionada.split(" - ");
            if (partes.length == 2) {
                String idMusica = partes[0];
                excluirMusicaPorId(idMusica);
                JOptionPane.showMessageDialog(this, "Música '" + partes[1] + "' deletada com sucesso");
                loadTableData();
                loadMusicasCombobox();
            } else {
                JOptionPane.showMessageDialog(this, "Formato de música inválido");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nenhuma música selecionada");
        }
    }//GEN-LAST:event_btnExcluirMusicaActionPerformed

    private void cbMusicaTocarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMusicaTocarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMusicaTocarActionPerformed

    private void cbMusicaExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMusicaExcluirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMusicaExcluirActionPerformed

    private void tblMusicaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tblMusicaInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tblMusicaInputMethodTextChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMusicaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMusicaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMusicaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMusicaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMusicaLista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMusica;
    private javax.swing.JButton btnBackPlaylist;
    private javax.swing.JButton btnExcluirMusica;
    private javax.swing.JButton btnTocarMusica;
    private javax.swing.JComboBox<String> cbMusicaExcluir;
    private javax.swing.JComboBox<String> cbMusicaTocar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMusica;
    // End of variables declaration//GEN-END:variables
}
